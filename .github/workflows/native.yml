name: Native build CI

on:
  push:

jobs:
  build:
    name: Build native binary OS (${{ matrix.config.name }})
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: linux,
            os: ubuntu-latest,
          }
          - {
            name: darwin,
            os: macos-latest,
          }
          - {
            name: windows,
            os: windows-latest,
          }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Setup GraalVM
        uses: ayltai/setup-graalvm@v1
        with:
          java-version: 11
          graalvm-version: 20.3.0
          native-image: true

      - name: Build with Maven
        run: mvn --batch-mode -DskipTests=true -Pnative-image package

      - name: Build native image
        if: matrix.config.name != 'windows'
        run: native-image -jar target/olf.jar -H:Name=olf --no-fallback --allow-incomplete-classpath -H:Class=com.powsybl.tools.Main

      - name: Build native image
        if: matrix.config.name == 'windows'
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          call native-image -jar target/olf.jar -H:Name=olf --no-fallback --allow-incomplete-classpath -H:Class=com.powsybl.tools.Main

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: olf-${{ matrix.config.name }}
          path: olf*

  package:
    name: Package binaries
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download wheels
        uses: actions/download-artifact@v2
        with:
          path: download

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: gridpy-wheels
          path: download/*
