name: Native build CI

on:
  push:

jobs:
  build:
    name: Build native binary OS ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      matrix:
        config:
          - {
            name: linux,
            os: ubuntu-latest,
            jdk_extension: tar.gz
          }
          - {
            name: darwin,
            os: macos-latest,
            jdk_extension: tar.gz
          }
          - {
            name: windows,
            os: windows-latest,
            jdk_extension: zip
          }

    steps:
      - name: Checkout sources
        uses: actions/checkout@v1

      - name: Install wget on Windows
        if: matrix.config.name == 'windows'
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
          choco install wget --no-progress

      - name: Download GraalVM JDK 11
        if: matrix.config.name != 'windows'
        run: wget -nv https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.0.0/graalvm-ce-java11-${{ matrix.config.name }}-amd64-20.0.0.${{ matrix.config.jdk_extension }}

      - name: Set up GraalVM JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
          architecture: x64
          jdkFile: graalvm-ce-java11-${{ matrix.config.name }}-amd64-20.0.0.${{ matrix.config.jdk_extension }}

      - name: Fix JAVA_HOME on MacOS
        if: matrix.config.os == 'macos-latest'
        run: mv $JAVA_HOME/Contents/Home/* $JAVA_HOME/

      - name: Install GraalVM Native Image
        run: $JAVA_HOME/bin/gu install --no-progress native-image

      - name: Build with Maven
        run: mvn --batch-mode -DskipTests=true -Pnative-image package

      - name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: olf
          path: target/olf
